.quiz .bd {
  background-image: url('./bd.png');
  background-size: cover;
  background-repeat: no-repeat;
  height: 100vh; 
  filter: brightness(0.2);
}


.quiz {
  position: relative;
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  color: white;
  text-align: center;
  font-family: 'Arial', sans-serif;
}


.bd {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1; 
}


.quiz-content {
  background: black;
  border-radius: 15px;
  padding: 20px 40px;
  max-width: 600px;
  width: 90%;
  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.5);
}


.quiz-content h1 {
  font-size: 2.5rem;
  margin-bottom: 20px;
}


.options {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.options button {
  padding: 15px;
  font-size: 1.2rem;
  border: 2px solid white;
  background: transparent;
  color: white;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.options button:hover {
  background: red;
  color: black;
}

.options button.selected {
  background: red;
  color: white;
}


.next-button {
  margin-top: 20px;
  padding: 10px 30px;
  font-size: 1.5rem;
  color: white;
  background: red;
  border: none;
  border-radius: 10px;
  cursor: pointer;
}

.next-button:disabled {
  background: gray;
  cursor: not-allowed;
}

.next-button:hover:not(:disabled) {
  background: darkred;
}


.results {
  background-image: url('./result.png');
  padding: 20px;
  border-radius: 15px;
  color: white;
  text-align: center;
}



To add a "Restart" button, you can reset the quiz state when the button is clicked. Here's how you can do it:

Steps to Add a Restart Button
Add a Restart Function:

Create a function that resets all state variables to their initial values.
Display the Restart Button:

Show the button in the results screen after the quiz is completed.
Update the UI:

Add the button with appropriate styling and functionality.
Updated Code with Restart Button
Hereâ€™s your updated Quiz.js component with the restart functionality:

javascript
Copy code
import React, { useState, useEffect } from 'react';
import Header from '../Header'; // Adjust the path as needed
import './styles.css'; // Ensure the CSS file is correctly imported

const Quiz = () => {
  const [questions, setQuestions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [score, setScore] = useState(0);
  const [selectedAnswer, setSelectedAnswer] = useState('');

  const fetchQuizData = () => {
    setLoading(true);
    fetch('http://localhost:5555/quiz')
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        setQuestions(data);
        setLoading(false);
      })
      .catch((err) => {
        setError(err.message);
        setLoading(false);
      });
  };

  useEffect(() => {
    fetchQuizData();
  }, []);

  const handleNext = () => {
    if (selectedAnswer === questions[currentQuestionIndex].answer) {
      setScore(score + 1);
    }
    setSelectedAnswer('');
    setCurrentQuestionIndex(currentQuestionIndex + 1);
  };

  const handleRestart = () => {
    setQuestions([]);
    setLoading(true);
    setError(null);
    setCurrentQuestionIndex(0);
    setScore(0);
    setSelectedAnswer('');
    fetchQuizData();
  };

  if (loading) return <div className="quiz"><div className="bd"></div><Header /><p>Loading...</p></div>;
  if (error) return <div className="quiz"><div className="bd"></div><Header /><p>Error: {error}</p></div>;
  if (currentQuestionIndex >= questions.length) {
    return (
      <div className="quiz">
        <div className="bd"></div>
        <Header />
        <div className="results">
          <h1>Your Score</h1>
          <p>{score} / {questions.length}</p>
          <button onClick={handleRestart} className="restart-button">
            Restart Quiz
          </button>
        </div>
      </div>
    );
  }

  const currentQuestion = questions[currentQuestionIndex];

  return (
    <div className="quiz">
      <div className="bd"></div>
      <Header />
      <div className="quiz-content">
        <h1>{currentQuestion.question}</h1>
        <div className="options">
          {currentQuestion.options.map((option, index) => (
            <button
              key={index}
              onClick={() => setSelectedAnswer(option)}
              className={`option ${selectedAnswer === option ? 'selected' : ''}`}
            >
              {option}
            </button>
          ))}
        </div>
        <button onClick={handleNext} disabled={!selectedAnswer} className="next-button">
          Next
        </button>
      </div>
    </div>
  );
};


.restart-button {
  margin-top: 20px;
  padding: 10px 30px;
  font-size: 1.5rem;
  color: white;
  background: blue;
  border: none;
  border-radius: 10px;
  cursor: pointer;
}

.restart-button:hover {
  background: darkblue;
}

  